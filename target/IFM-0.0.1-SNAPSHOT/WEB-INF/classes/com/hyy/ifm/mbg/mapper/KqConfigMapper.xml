<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hyy.ifm.mbg.mapper.KqConfigMapper">
  <resultMap id="BaseResultMap" type="com.hyy.ifm.mbg.model.KqConfig">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="mchntcd" jdbcType="VARCHAR" property="mchntcd" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="terminalId" jdbcType="VARCHAR" property="terminalid" />
    <result column="security_key" jdbcType="VARCHAR" property="securityKey" />
    <result column="private_key" jdbcType="VARCHAR" property="privateKey" />
    <result column="pub_key" jdbcType="VARCHAR" property="pubKey" />
    <result column="callback_url" jdbcType="VARCHAR" property="callbackUrl" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, url, mchntcd, password, terminalId, security_key, private_key, pub_key, callback_url, 
    remark
  </sql>
  <select id="selectByExample" parameterType="com.hyy.ifm.mbg.model.KqConfigExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from kq_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from kq_config
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from kq_config
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hyy.ifm.mbg.model.KqConfigExample">
    delete from kq_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hyy.ifm.mbg.model.KqConfig">
    insert into kq_config (id, url, mchntcd, 
      password, terminalId, security_key, 
      private_key, pub_key, callback_url, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{mchntcd,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{terminalid,jdbcType=VARCHAR}, #{securityKey,jdbcType=VARCHAR}, 
      #{privateKey,jdbcType=VARCHAR}, #{pubKey,jdbcType=VARCHAR}, #{callbackUrl,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hyy.ifm.mbg.model.KqConfig">
    insert into kq_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="mchntcd != null">
        mchntcd,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="terminalid != null">
        terminalId,
      </if>
      <if test="securityKey != null">
        security_key,
      </if>
      <if test="privateKey != null">
        private_key,
      </if>
      <if test="pubKey != null">
        pub_key,
      </if>
      <if test="callbackUrl != null">
        callback_url,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="mchntcd != null">
        #{mchntcd,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="terminalid != null">
        #{terminalid,jdbcType=VARCHAR},
      </if>
      <if test="securityKey != null">
        #{securityKey,jdbcType=VARCHAR},
      </if>
      <if test="privateKey != null">
        #{privateKey,jdbcType=VARCHAR},
      </if>
      <if test="pubKey != null">
        #{pubKey,jdbcType=VARCHAR},
      </if>
      <if test="callbackUrl != null">
        #{callbackUrl,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hyy.ifm.mbg.model.KqConfigExample" resultType="java.lang.Integer">
    select count(*) from kq_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update kq_config
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.mchntcd != null">
        mchntcd = #{record.mchntcd,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.terminalid != null">
        terminalId = #{record.terminalid,jdbcType=VARCHAR},
      </if>
      <if test="record.securityKey != null">
        security_key = #{record.securityKey,jdbcType=VARCHAR},
      </if>
      <if test="record.privateKey != null">
        private_key = #{record.privateKey,jdbcType=VARCHAR},
      </if>
      <if test="record.pubKey != null">
        pub_key = #{record.pubKey,jdbcType=VARCHAR},
      </if>
      <if test="record.callbackUrl != null">
        callback_url = #{record.callbackUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update kq_config
    set id = #{record.id,jdbcType=INTEGER},
      url = #{record.url,jdbcType=VARCHAR},
      mchntcd = #{record.mchntcd,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      terminalId = #{record.terminalid,jdbcType=VARCHAR},
      security_key = #{record.securityKey,jdbcType=VARCHAR},
      private_key = #{record.privateKey,jdbcType=VARCHAR},
      pub_key = #{record.pubKey,jdbcType=VARCHAR},
      callback_url = #{record.callbackUrl,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hyy.ifm.mbg.model.KqConfig">
    update kq_config
    <set>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="mchntcd != null">
        mchntcd = #{mchntcd,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="terminalid != null">
        terminalId = #{terminalid,jdbcType=VARCHAR},
      </if>
      <if test="securityKey != null">
        security_key = #{securityKey,jdbcType=VARCHAR},
      </if>
      <if test="privateKey != null">
        private_key = #{privateKey,jdbcType=VARCHAR},
      </if>
      <if test="pubKey != null">
        pub_key = #{pubKey,jdbcType=VARCHAR},
      </if>
      <if test="callbackUrl != null">
        callback_url = #{callbackUrl,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hyy.ifm.mbg.model.KqConfig">
    update kq_config
    set url = #{url,jdbcType=VARCHAR},
      mchntcd = #{mchntcd,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      terminalId = #{terminalid,jdbcType=VARCHAR},
      security_key = #{securityKey,jdbcType=VARCHAR},
      private_key = #{privateKey,jdbcType=VARCHAR},
      pub_key = #{pubKey,jdbcType=VARCHAR},
      callback_url = #{callbackUrl,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>