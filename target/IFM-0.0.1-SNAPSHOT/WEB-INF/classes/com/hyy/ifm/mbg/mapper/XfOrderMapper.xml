<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hyy.ifm.mbg.mapper.XfOrderMapper">
  <resultMap id="BaseResultMap" type="com.hyy.ifm.mbg.model.XfOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="outer_id" jdbcType="INTEGER" property="outerId" />
    <result column="request_no" jdbcType="VARCHAR" property="requestNo" />
    <result column="user_ip" jdbcType="VARCHAR" property="userIp" />
    <result column="amt" jdbcType="DOUBLE" property="amt" />
    <result column="protocol_no" jdbcType="VARCHAR" property="protocolNo" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="pay_date" jdbcType="TIMESTAMP" property="payDate" />
    <result column="fuion_order_no" jdbcType="VARCHAR" property="fuionOrderNo" />
    <result column="fail_reason" jdbcType="VARCHAR" property="failReason" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, type, outer_id, request_no, user_ip, amt, protocol_no, create_time, 
    status, pay_date, fuion_order_no, fail_reason
  </sql>
  <select id="selectByExample" parameterType="com.hyy.ifm.mbg.model.XfOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from xf_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from xf_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from xf_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hyy.ifm.mbg.model.XfOrderExample">
    delete from xf_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hyy.ifm.mbg.model.XfOrder">
    insert into xf_order (id, user_id, type, 
      outer_id, request_no, user_ip, 
      amt, protocol_no, create_time, 
      status, pay_date, fuion_order_no, 
      fail_reason)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, 
      #{outerId,jdbcType=INTEGER}, #{requestNo,jdbcType=VARCHAR}, #{userIp,jdbcType=VARCHAR}, 
      #{amt,jdbcType=DOUBLE}, #{protocolNo,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=VARCHAR}, #{payDate,jdbcType=TIMESTAMP}, #{fuionOrderNo,jdbcType=VARCHAR}, 
      #{failReason,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hyy.ifm.mbg.model.XfOrder">
    insert into xf_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="outerId != null">
        outer_id,
      </if>
      <if test="requestNo != null">
        request_no,
      </if>
      <if test="userIp != null">
        user_ip,
      </if>
      <if test="amt != null">
        amt,
      </if>
      <if test="protocolNo != null">
        protocol_no,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="payDate != null">
        pay_date,
      </if>
      <if test="fuionOrderNo != null">
        fuion_order_no,
      </if>
      <if test="failReason != null">
        fail_reason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="outerId != null">
        #{outerId,jdbcType=INTEGER},
      </if>
      <if test="requestNo != null">
        #{requestNo,jdbcType=VARCHAR},
      </if>
      <if test="userIp != null">
        #{userIp,jdbcType=VARCHAR},
      </if>
      <if test="amt != null">
        #{amt,jdbcType=DOUBLE},
      </if>
      <if test="protocolNo != null">
        #{protocolNo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="payDate != null">
        #{payDate,jdbcType=TIMESTAMP},
      </if>
      <if test="fuionOrderNo != null">
        #{fuionOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="failReason != null">
        #{failReason,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hyy.ifm.mbg.model.XfOrderExample" resultType="java.lang.Integer">
    select count(*) from xf_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update xf_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.outerId != null">
        outer_id = #{record.outerId,jdbcType=INTEGER},
      </if>
      <if test="record.requestNo != null">
        request_no = #{record.requestNo,jdbcType=VARCHAR},
      </if>
      <if test="record.userIp != null">
        user_ip = #{record.userIp,jdbcType=VARCHAR},
      </if>
      <if test="record.amt != null">
        amt = #{record.amt,jdbcType=DOUBLE},
      </if>
      <if test="record.protocolNo != null">
        protocol_no = #{record.protocolNo,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.payDate != null">
        pay_date = #{record.payDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fuionOrderNo != null">
        fuion_order_no = #{record.fuionOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.failReason != null">
        fail_reason = #{record.failReason,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update xf_order
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      outer_id = #{record.outerId,jdbcType=INTEGER},
      request_no = #{record.requestNo,jdbcType=VARCHAR},
      user_ip = #{record.userIp,jdbcType=VARCHAR},
      amt = #{record.amt,jdbcType=DOUBLE},
      protocol_no = #{record.protocolNo,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR},
      pay_date = #{record.payDate,jdbcType=TIMESTAMP},
      fuion_order_no = #{record.fuionOrderNo,jdbcType=VARCHAR},
      fail_reason = #{record.failReason,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hyy.ifm.mbg.model.XfOrder">
    update xf_order
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="outerId != null">
        outer_id = #{outerId,jdbcType=INTEGER},
      </if>
      <if test="requestNo != null">
        request_no = #{requestNo,jdbcType=VARCHAR},
      </if>
      <if test="userIp != null">
        user_ip = #{userIp,jdbcType=VARCHAR},
      </if>
      <if test="amt != null">
        amt = #{amt,jdbcType=DOUBLE},
      </if>
      <if test="protocolNo != null">
        protocol_no = #{protocolNo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="payDate != null">
        pay_date = #{payDate,jdbcType=TIMESTAMP},
      </if>
      <if test="fuionOrderNo != null">
        fuion_order_no = #{fuionOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="failReason != null">
        fail_reason = #{failReason,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hyy.ifm.mbg.model.XfOrder">
    update xf_order
    set user_id = #{userId,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      outer_id = #{outerId,jdbcType=INTEGER},
      request_no = #{requestNo,jdbcType=VARCHAR},
      user_ip = #{userIp,jdbcType=VARCHAR},
      amt = #{amt,jdbcType=DOUBLE},
      protocol_no = #{protocolNo,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      pay_date = #{payDate,jdbcType=TIMESTAMP},
      fuion_order_no = #{fuionOrderNo,jdbcType=VARCHAR},
      fail_reason = #{failReason,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>