<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hyy.ifm.mbg.mapper.QdCountMapper">
  <resultMap id="BaseResultMap" type="com.hyy.ifm.mbg.model.QdCount">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="source" jdbcType="CHAR" property="source" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="countUv" jdbcType="INTEGER" property="countuv" />
    <result column="noneCount" jdbcType="INTEGER" property="nonecount" />
    <result column="faceCount" jdbcType="INTEGER" property="facecount" />
    <result column="perCount" jdbcType="INTEGER" property="percount" />
    <result column="bankCount" jdbcType="INTEGER" property="bankcount" />
    <result column="concatCount" jdbcType="INTEGER" property="concatcount" />
    <result column="yunCount" jdbcType="INTEGER" property="yuncount" />
    <result column="payCount" jdbcType="INTEGER" property="paycount" />
    <result column="visit_time" jdbcType="TIMESTAMP" property="visitTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, source, count, countUv, noneCount, faceCount, perCount, bankCount, concatCount, 
    yunCount, payCount, visit_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.hyy.ifm.mbg.model.QdCountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from qd_count
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from qd_count
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from qd_count
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hyy.ifm.mbg.model.QdCountExample">
    delete from qd_count
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hyy.ifm.mbg.model.QdCount">
    insert into qd_count (id, source, count, 
      countUv, noneCount, faceCount, 
      perCount, bankCount, concatCount, 
      yunCount, payCount, visit_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{source,jdbcType=CHAR}, #{count,jdbcType=INTEGER}, 
      #{countuv,jdbcType=INTEGER}, #{nonecount,jdbcType=INTEGER}, #{facecount,jdbcType=INTEGER}, 
      #{percount,jdbcType=INTEGER}, #{bankcount,jdbcType=INTEGER}, #{concatcount,jdbcType=INTEGER}, 
      #{yuncount,jdbcType=INTEGER}, #{paycount,jdbcType=INTEGER}, #{visitTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hyy.ifm.mbg.model.QdCount">
    insert into qd_count
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="countuv != null">
        countUv,
      </if>
      <if test="nonecount != null">
        noneCount,
      </if>
      <if test="facecount != null">
        faceCount,
      </if>
      <if test="percount != null">
        perCount,
      </if>
      <if test="bankcount != null">
        bankCount,
      </if>
      <if test="concatcount != null">
        concatCount,
      </if>
      <if test="yuncount != null">
        yunCount,
      </if>
      <if test="paycount != null">
        payCount,
      </if>
      <if test="visitTime != null">
        visit_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        #{source,jdbcType=CHAR},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="countuv != null">
        #{countuv,jdbcType=INTEGER},
      </if>
      <if test="nonecount != null">
        #{nonecount,jdbcType=INTEGER},
      </if>
      <if test="facecount != null">
        #{facecount,jdbcType=INTEGER},
      </if>
      <if test="percount != null">
        #{percount,jdbcType=INTEGER},
      </if>
      <if test="bankcount != null">
        #{bankcount,jdbcType=INTEGER},
      </if>
      <if test="concatcount != null">
        #{concatcount,jdbcType=INTEGER},
      </if>
      <if test="yuncount != null">
        #{yuncount,jdbcType=INTEGER},
      </if>
      <if test="paycount != null">
        #{paycount,jdbcType=INTEGER},
      </if>
      <if test="visitTime != null">
        #{visitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hyy.ifm.mbg.model.QdCountExample" resultType="java.lang.Integer">
    select count(*) from qd_count
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update qd_count
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.source != null">
        source = #{record.source,jdbcType=CHAR},
      </if>
      <if test="record.count != null">
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.countuv != null">
        countUv = #{record.countuv,jdbcType=INTEGER},
      </if>
      <if test="record.nonecount != null">
        noneCount = #{record.nonecount,jdbcType=INTEGER},
      </if>
      <if test="record.facecount != null">
        faceCount = #{record.facecount,jdbcType=INTEGER},
      </if>
      <if test="record.percount != null">
        perCount = #{record.percount,jdbcType=INTEGER},
      </if>
      <if test="record.bankcount != null">
        bankCount = #{record.bankcount,jdbcType=INTEGER},
      </if>
      <if test="record.concatcount != null">
        concatCount = #{record.concatcount,jdbcType=INTEGER},
      </if>
      <if test="record.yuncount != null">
        yunCount = #{record.yuncount,jdbcType=INTEGER},
      </if>
      <if test="record.paycount != null">
        payCount = #{record.paycount,jdbcType=INTEGER},
      </if>
      <if test="record.visitTime != null">
        visit_time = #{record.visitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update qd_count
    set id = #{record.id,jdbcType=INTEGER},
      source = #{record.source,jdbcType=CHAR},
      count = #{record.count,jdbcType=INTEGER},
      countUv = #{record.countuv,jdbcType=INTEGER},
      noneCount = #{record.nonecount,jdbcType=INTEGER},
      faceCount = #{record.facecount,jdbcType=INTEGER},
      perCount = #{record.percount,jdbcType=INTEGER},
      bankCount = #{record.bankcount,jdbcType=INTEGER},
      concatCount = #{record.concatcount,jdbcType=INTEGER},
      yunCount = #{record.yuncount,jdbcType=INTEGER},
      payCount = #{record.paycount,jdbcType=INTEGER},
      visit_time = #{record.visitTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hyy.ifm.mbg.model.QdCount">
    update qd_count
    <set>
      <if test="source != null">
        source = #{source,jdbcType=CHAR},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="countuv != null">
        countUv = #{countuv,jdbcType=INTEGER},
      </if>
      <if test="nonecount != null">
        noneCount = #{nonecount,jdbcType=INTEGER},
      </if>
      <if test="facecount != null">
        faceCount = #{facecount,jdbcType=INTEGER},
      </if>
      <if test="percount != null">
        perCount = #{percount,jdbcType=INTEGER},
      </if>
      <if test="bankcount != null">
        bankCount = #{bankcount,jdbcType=INTEGER},
      </if>
      <if test="concatcount != null">
        concatCount = #{concatcount,jdbcType=INTEGER},
      </if>
      <if test="yuncount != null">
        yunCount = #{yuncount,jdbcType=INTEGER},
      </if>
      <if test="paycount != null">
        payCount = #{paycount,jdbcType=INTEGER},
      </if>
      <if test="visitTime != null">
        visit_time = #{visitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hyy.ifm.mbg.model.QdCount">
    update qd_count
    set source = #{source,jdbcType=CHAR},
      count = #{count,jdbcType=INTEGER},
      countUv = #{countuv,jdbcType=INTEGER},
      noneCount = #{nonecount,jdbcType=INTEGER},
      faceCount = #{facecount,jdbcType=INTEGER},
      perCount = #{percount,jdbcType=INTEGER},
      bankCount = #{bankcount,jdbcType=INTEGER},
      concatCount = #{concatcount,jdbcType=INTEGER},
      yunCount = #{yuncount,jdbcType=INTEGER},
      payCount = #{paycount,jdbcType=INTEGER},
      visit_time = #{visitTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>