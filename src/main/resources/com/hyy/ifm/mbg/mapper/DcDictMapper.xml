<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hyy.ifm.mbg.mapper.DcDictMapper">
  <resultMap id="BaseResultMap" type="com.hyy.ifm.mbg.model.DcDict">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="data_type" jdbcType="VARCHAR" property="dataType" />
    <result column="item_key" jdbcType="VARCHAR" property="itemKey" />
    <result column="item_value" jdbcType="VARCHAR" property="itemValue" />
    <result column="xh" jdbcType="VARCHAR" property="xh" />
    <result column="is_use" jdbcType="CHAR" property="isUse" />
    <result column="out_data_from" jdbcType="VARCHAR" property="outDataFrom" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="dict_desc" jdbcType="VARCHAR" property="dictDesc" />
    <result column="showese" jdbcType="VARCHAR" property="showese" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, data_type, item_key, item_value, xh, is_use, out_data_from, parent_id, dict_desc, 
    showese
  </sql>
  <select id="selectByExample" parameterType="com.hyy.ifm.mbg.model.DcDictExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dc_dict
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dc_dict
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from dc_dict
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hyy.ifm.mbg.model.DcDictExample">
    delete from dc_dict
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hyy.ifm.mbg.model.DcDict">
    insert into dc_dict (id, data_type, item_key, 
      item_value, xh, is_use, 
      out_data_from, parent_id, dict_desc, 
      showese)
    values (#{id,jdbcType=INTEGER}, #{dataType,jdbcType=VARCHAR}, #{itemKey,jdbcType=VARCHAR}, 
      #{itemValue,jdbcType=VARCHAR}, #{xh,jdbcType=VARCHAR}, #{isUse,jdbcType=CHAR}, 
      #{outDataFrom,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, #{dictDesc,jdbcType=VARCHAR}, 
      #{showese,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hyy.ifm.mbg.model.DcDict">
    insert into dc_dict
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dataType != null">
        data_type,
      </if>
      <if test="itemKey != null">
        item_key,
      </if>
      <if test="itemValue != null">
        item_value,
      </if>
      <if test="xh != null">
        xh,
      </if>
      <if test="isUse != null">
        is_use,
      </if>
      <if test="outDataFrom != null">
        out_data_from,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="dictDesc != null">
        dict_desc,
      </if>
      <if test="showese != null">
        showese,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="dataType != null">
        #{dataType,jdbcType=VARCHAR},
      </if>
      <if test="itemKey != null">
        #{itemKey,jdbcType=VARCHAR},
      </if>
      <if test="itemValue != null">
        #{itemValue,jdbcType=VARCHAR},
      </if>
      <if test="xh != null">
        #{xh,jdbcType=VARCHAR},
      </if>
      <if test="isUse != null">
        #{isUse,jdbcType=CHAR},
      </if>
      <if test="outDataFrom != null">
        #{outDataFrom,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="dictDesc != null">
        #{dictDesc,jdbcType=VARCHAR},
      </if>
      <if test="showese != null">
        #{showese,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hyy.ifm.mbg.model.DcDictExample" resultType="java.lang.Integer">
    select count(*) from dc_dict
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dc_dict
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.dataType != null">
        data_type = #{record.dataType,jdbcType=VARCHAR},
      </if>
      <if test="record.itemKey != null">
        item_key = #{record.itemKey,jdbcType=VARCHAR},
      </if>
      <if test="record.itemValue != null">
        item_value = #{record.itemValue,jdbcType=VARCHAR},
      </if>
      <if test="record.xh != null">
        xh = #{record.xh,jdbcType=VARCHAR},
      </if>
      <if test="record.isUse != null">
        is_use = #{record.isUse,jdbcType=CHAR},
      </if>
      <if test="record.outDataFrom != null">
        out_data_from = #{record.outDataFrom,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.dictDesc != null">
        dict_desc = #{record.dictDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.showese != null">
        showese = #{record.showese,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dc_dict
    set id = #{record.id,jdbcType=INTEGER},
      data_type = #{record.dataType,jdbcType=VARCHAR},
      item_key = #{record.itemKey,jdbcType=VARCHAR},
      item_value = #{record.itemValue,jdbcType=VARCHAR},
      xh = #{record.xh,jdbcType=VARCHAR},
      is_use = #{record.isUse,jdbcType=CHAR},
      out_data_from = #{record.outDataFrom,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      dict_desc = #{record.dictDesc,jdbcType=VARCHAR},
      showese = #{record.showese,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hyy.ifm.mbg.model.DcDict">
    update dc_dict
    <set>
      <if test="dataType != null">
        data_type = #{dataType,jdbcType=VARCHAR},
      </if>
      <if test="itemKey != null">
        item_key = #{itemKey,jdbcType=VARCHAR},
      </if>
      <if test="itemValue != null">
        item_value = #{itemValue,jdbcType=VARCHAR},
      </if>
      <if test="xh != null">
        xh = #{xh,jdbcType=VARCHAR},
      </if>
      <if test="isUse != null">
        is_use = #{isUse,jdbcType=CHAR},
      </if>
      <if test="outDataFrom != null">
        out_data_from = #{outDataFrom,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="dictDesc != null">
        dict_desc = #{dictDesc,jdbcType=VARCHAR},
      </if>
      <if test="showese != null">
        showese = #{showese,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hyy.ifm.mbg.model.DcDict">
    update dc_dict
    set data_type = #{dataType,jdbcType=VARCHAR},
      item_key = #{itemKey,jdbcType=VARCHAR},
      item_value = #{itemValue,jdbcType=VARCHAR},
      xh = #{xh,jdbcType=VARCHAR},
      is_use = #{isUse,jdbcType=CHAR},
      out_data_from = #{outDataFrom,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      dict_desc = #{dictDesc,jdbcType=VARCHAR},
      showese = #{showese,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="qryDictByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from dc_dict
    where item_value = #{name,jdbcType=INTEGER}
  </select>
</mapper>